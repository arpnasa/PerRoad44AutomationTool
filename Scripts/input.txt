            elif i == "current season":
                # time.sleep(2)
                if self.csList[self.csIndex] is nan:
                    self.csIndex += 1
                    continue

                setSeason = '1'
                if self.csList[self.csIndex] == 'summer':
                    setSeason = '1'
                elif self.csList[self.csIndex] == 'fall':
                    setSeason = '2'
                elif self.csList[self.csIndex] == 'winter':
                    setSeason = '3'
                elif self.csList[self.csIndex] == 'spring':
                    setSeason = '4'
                elif self.csList[self.csIndex] == 'spring 2':
                    setSeason = '5'

                self.csIndex += 1

                ahkHandler.writeFile(Constant.headerToClassNN[i], "dropDown", setSeason)
                ahkScript = ahkHandler.readFile()
                ahk.run_script(ahkScript, blocking=False)

            elif i == "material type layer 1":
                num = '1'
                if self.mt1List[self.mt1Index] is nan:
                    self.mt1Index += 1
                    continue

                if self.mt1List[self.mt1Index] == "AC":
                    num = '1'
                elif self.mt1List[self.mt1Index] == "Other":
                    num = '2'

                self.mt1Index += 1

                ahkHandler.writeFile(Constant.headerToClassNN[i], "dropDown", num)
                ahkScript = ahkHandler.readFile()
                ahk.run_script(ahkScript, blocking=False)

            elif i == "grade upper layer 1":
                num = '1'
                if self.gu1List[self.gu1Index] is nan:
                    self.gu1Index += 1
                    continue

                if self.gu1List[self.gu1Index] == 82:
                    num = '1'
                elif self.gu1List[self.gu1Index] == 76:
                    num = '2'
                elif self.gu1List[self.gu1Index] == 70:
                    num = '3'
                elif self.gu1List[self.gu1Index] == 64:
                    num = '4'
                elif self.gu1List[self.gu1Index] == 58:
                    num = '5'
                elif self.gu1List[self.gu1Index] == 52:
                    num = '6'
                elif self.gu1List[self.gu1Index] == 46:
                    num = '7'

                self.gu1Index += 1

                ahkHandler.writeFile(Constant.headerToClassNN[i], "dropDown", num)
                ahkScript = ahkHandler.readFile()
                ahk.run_script(ahkScript, blocking=False)

            elif i == "grade lower layer 1":
                num = '1'
                if self.gl1List[self.gl1Index] is nan:
                    self.gl1Index += 1
                    continue

                if self.gl1List[self.gl1Index] == -10:
                    num = '1'
                elif self.gl1List[self.gl1Index] == -16:
                    num = '2'
                elif self.gl1List[self.gl1Index] == -22:
                    num = '3'
                elif self.gl1List[self.gl1Index] == -28:
                    num = '4'
                elif self.gl1List[self.gl1Index] == -34:
                    num = '5'
                elif self.gl1List[self.gl1Index] == -40:
                    num = '6'

                self.gl1Index += 1

                ahkHandler.writeFile(Constant.headerToClassNN[i], "dropDown", num)
                ahkScript = ahkHandler.readFile()
                ahk.run_script(ahkScript, blocking=False)

            elif i == "modulus layer 1":
                # time.sleep(2)
                if self.mod1List[self.mod1Index] is nan:
                    self.mod1Index += 1
                    continue
                ahkHandler.writeFile(Constant.headerToClassNN[i], "entry", self.mod1List[self.mod1Index])
                ahkScript = ahkHandler.readFile()
                ahk.run_script(ahkScript, blocking=False)
                self.mod1Index += 1

            elif i == "material type layer 2":
                num = '1'
                if self.mt2List[self.mt2Index] is nan:
                    self.mt2List[self.mt2Index] += 1
                    continue

                if self.mt2List[self.mt2Index] == "AC":
                    num = '1'
                elif self.mt2List[self.mt2Index] == "Cracked AC":
                    num = '2'
                elif self.mt2List[self.mt2Index] == "PCC":
                    num = '3'
                elif self.mt2List[self.mt2Index] == "Rub PCC":
                    num = '4'
                elif self.mt2List[self.mt2Index] == "C and S PCC":
                    num = '5'
                elif self.mt2List[self.mt2Index] == "B and S PCC":
                    num = '6'
                elif self.mt2List[self.mt2Index] == "Gran Base":
                    num = '7'
                elif self.mt2List[self.mt2Index] == "Soil":
                    num = '8'
                elif self.mt2List[self.mt2Index] == "Rock":
                    num = '9'
                elif self.mt2List[self.mt2Index] == "Other":
                    num = '10'

                self.mt2Index += 1

                ahkHandler.writeFile(Constant.headerToClassNN[i], "dropDown", num)
                ahkScript = ahkHandler.readFile()
                ahk.run_script(ahkScript, blocking=False)

            elif i == "grade upper layer 2":
                num = '1'
                if self.gu2List[self.gu2Index] is nan:
                    self.gu2Index += 1
                    continue

                if self.gu2List[self.gu2Index] == 82:
                    num = '1'
                elif self.gu2List[self.gu2Index] == 76:
                    num = '2'
                elif self.gu2List[self.gu2Index] == 70:
                    num = '3'
                elif self.gu2List[self.gu2Index] == 64:
                    num = '4'
                elif self.gu2List[self.gu2Index] == 58:
                    num = '5'
                elif self.gu2List[self.gu2Index] == 52:
                    num = '6'
                elif self.gu2List[self.gu2Index] == 46:
                    num = '7'

                self.gu2Index += 1

                ahkHandler.writeFile(Constant.headerToClassNN[i], "dropDown", num)
                ahkScript = ahkHandler.readFile()
                ahk.run_script(ahkScript, blocking=False)

            elif i == "grade lower layer 2":
                num = '1'
                if self.gl2List[self.gl2Index] is nan:
                    self.gl1Index += 1
                    continue

                if self.gl2List[self.gl2Index] == -10:
                    num = '1'
                elif self.gl2List[self.gl2Index] == -16:
                    num = '2'
                elif self.gl2List[self.gl2Index] == -22:
                    num = '3'
                elif self.gl2List[self.gl2Index] == -28:
                    num = '4'
                elif self.gl2List[self.gl2Index] == -34:
                    num = '5'
                elif self.gl2List[self.gl2Index] == -40:
                    num = '6'

                self.gl2Index += 1

                ahkHandler.writeFile(Constant.headerToClassNN[i], "dropDown", num)
                ahkScript = ahkHandler.readFile()
                ahk.run_script(ahkScript, blocking=False)

            # elif i == "modulus layer 2":
            #     time.sleep(2)
            #     if self.mod2List[self.mod2Index] is nan:
            #         self.mod2Index += 1
            #         continue
            #
            #     ahkHandler.writeFile(Constant.headerToClassNN[i], "entry", self.mod2List[self.mod2Index])
            #     ahkScript = ahkHandler.readFile()
            #     ahk.run_script(ahkScript, blocking=False)
            #     self.mod2Index += 1

            elif i == "material type layer 3":
                num = '1'
                if self.mt3List[self.mt3Index] is nan:
                    self.mt3List[self.mt3Index] += 1
                    continue

                if self.mt3List[self.mt3Index] == "AC":
                    num = '1'
                elif self.mt3List[self.mt3Index] == "Cracked AC":
                    num = '2'
                elif self.mt3List[self.mt3Index] == "PCC":
                    num = '3'
                elif self.mt3List[self.mt3Index] == "Rub PCC":
                    num = '4'
                elif self.mt3List[self.mt3Index] == "C and S PCC":
                    num = '5'
                elif self.mt3List[self.mt3Index] == "B and S PCC":
                    num = '6'
                elif self.mt3List[self.mt3Index] == "Gran Base":
                    num = '7'
                elif self.mt3List[self.mt3Index] == "Soil":
                    num = '8'
                elif self.mt3List[self.mt3Index] == "Rock":
                    num = '9'
                elif self.mt3List[self.mt3Index] == "Other":
                    num = '10'

                self.mt3Index += 1

                ahkHandler.writeFile(Constant.headerToClassNN[i], "dropDown", num)
                ahkScript = ahkHandler.readFile()
                ahk.run_script(ahkScript, blocking=False)

            elif i == "grade upper layer 3":
                num = '1'
                if self.gu3List[self.gu3Index] is nan:
                    self.gu3Index += 1
                    continue

                if self.gu3List[self.gu3Index] == 82:
                    num = '1'
                elif self.gu3List[self.gu3Index] == 76:
                    num = '2'
                elif self.gu3List[self.gu3Index] == 70:
                    num = '3'
                elif self.gu3List[self.gu3Index] == 64:
                    num = '4'
                elif self.gu3List[self.gu3Index] == 58:
                    num = '5'
                elif self.gu3List[self.gu3Index] == 52:
                    num = '6'
                elif self.gu3List[self.gu3Index] == 46:
                    num = '7'

                self.gu3Index += 1

                ahkHandler.writeFile(Constant.headerToClassNN[i], "dropDown", num)
                ahkScript = ahkHandler.readFile()
                ahk.run_script(ahkScript, blocking=False)

            elif i == "grade lower layer 3":
                num = '1'
                if self.gl3List[self.gl3Index] is nan:
                    self.gl3Index += 1
                    continue

                if self.gl3List[self.gl3Index] == -10:
                    num = '1'
                elif self.gl3List[self.gl3Index] == -16:
                    num = '2'
                elif self.gl3List[self.gl3Index] == -22:
                    num = '3'
                elif self.gl3List[self.gl3Index] == -28:
                    num = '4'
                elif self.gl3List[self.gl3Index] == -34:
                    num = '5'
                elif self.gl3List[self.gl3Index] == -40:
                    num = '6'

                self.gl3Index += 1

                ahkHandler.writeFile(Constant.headerToClassNN[i], "dropDown", num)
                ahkScript = ahkHandler.readFile()
                ahk.run_script(ahkScript, blocking=False)

            # elif i == "modulus layer 3":
            #     time.sleep(2)
            #     if self.mod3List[self.mod3Index] is nan:
            #         self.mod3Index += 1
            #         continue
            #
            #     ahkHandler.writeFile(Constant.headerToClassNN[i], "entry", self.mod3List[self.mod3Index])
            #     ahkScript = ahkHandler.readFile()
            #     ahk.run_script(ahkScript, blocking=False)
            #     self.mod3Index += 1



            elif i == "material type layer 4":
                num = '1'
                if self.mt4List[self.mt4Index] is nan:
                    self.mt4List[self.mt4Index] += 1
                    continue

                if self.mt4List[self.mt4Index] == "AC":
                    num = '1'
                elif self.mt4List[self.mt4Index] == "Cracked AC":
                    num = '2'
                elif self.mt4List[self.mt4Index] == "PCC":
                    num = '3'
                elif self.mt4List[self.mt4Index] == "Rub PCC":
                    num = '4'
                elif self.mt4List[self.mt4Index] == "C and S PCC":
                    num = '5'
                elif self.mt4List[self.mt4Index] == "B and S PCC":
                    num = '6'
                elif self.mt4List[self.mt4Index] == "Gran Base":
                    num = '7'
                elif self.mt4List[self.mt4Index] == "Soil":
                    num = '8'
                elif self.mt4List[self.mt4Index] == "Rock":
                    num = '9'
                elif self.mt4List[self.mt4Index] == "Other":
                    num = '10'

                self.mt4Index += 1

                ahkHandler.writeFile(Constant.headerToClassNN[i], "dropDown", num)
                ahkScript = ahkHandler.readFile()
                ahk.run_script(ahkScript, blocking=False)

            elif i == "grade upper layer 4":
                num = '1'
                if self.gu4List[self.gu4Index] is nan:
                    self.gu4Index += 1
                    continue

                if self.gu4List[self.gu4Index] == 82:
                    num = '1'
                elif self.gu4List[self.gu4Index] == 76:
                    num = '2'
                elif self.gu4List[self.gu4Index] == 70:
                    num = '3'
                elif self.gu4List[self.gu4Index] == 64:
                    num = '4'
                elif self.gu4List[self.gu4Index] == 58:
                    num = '5'
                elif self.gu4List[self.gu4Index] == 52:
                    num = '6'
                elif self.gu4List[self.gu4Index] == 46:
                    num = '7'

                self.gu4Index += 1

                ahkHandler.writeFile(Constant.headerToClassNN[i], "dropDown", num)
                ahkScript = ahkHandler.readFile()
                ahk.run_script(ahkScript, blocking=False)

            elif i == "grade lower layer 4":
                num = '1'
                if self.gl4List[self.gl4Index] is nan:
                    self.gl4Index += 1
                    continue

                if self.gl4List[self.gl4Index] == -10:
                    num = '1'
                elif self.gl4List[self.gl4Index] == -16:
                    num = '2'
                elif self.gl4List[self.gl4Index] == -22:
                    num = '3'
                elif self.gl4List[self.gl4Index] == -28:
                    num = '4'
                elif self.gl4List[self.gl4Index] == -34:
                    num = '5'
                elif self.gl4List[self.gl4Index] == -40:
                    num = '6'

                self.gl4Index += 1

                ahkHandler.writeFile(Constant.headerToClassNN[i], "dropDown", num)
                ahkScript = ahkHandler.readFile()
                ahk.run_script(ahkScript, blocking=False)


            # elif i == "modulus layer 4":
            #     time.sleep(2)
            #     if self.mod4List[self.mod4Index] is nan:
            #         self.mod4Index += 1
            #         continue
            #
            #     ahkHandler.writeFile(Constant.headerToClassNN[i], "entry", self.mod4List[self.mod4Index])
            #     ahkScript = ahkHandler.readFile()
            #     ahk.run_script(ahkScript, blocking=False)
            #     self.mod4Index += 1


            elif i == "material type layer 5":
                num = '1'
                if self.mt5List[self.mt5Index] is nan:
                    self.mt5List[self.mt5Index] += 1
                    continue

                if self.mt5List[self.mt5Index] == "Gran Base":
                    num = '1'
                elif self.mt5List[self.mt5Index] == "Soil":
                    num = '2'
                elif self.mt5List[self.mt5Index] == "Rock":
                    num = '3'
                elif self.mt5List[self.mt5Index] == "Other":
                    num = '4'

                self.mt5Index += 1

                ahkHandler.writeFile(Constant.headerToClassNN[i], "dropDown", num)
                ahkScript = ahkHandler.readFile()
                ahk.run_script(ahkScript, blocking=False)


            # elif i == "modulus layer 5":
            #     time.sleep(2)
            #     if self.mod5List[self.mod5Index] is nan:
            #         self.mod5Index += 1
            #         continue
            #
            #     ahkHandler.writeFile(Constant.headerToClassNN[i], "entry", self.mod5List[self.mod5Index])
            #     ahkScript = ahkHandler.readFile()
            #     ahk.run_script(ahkScript, blocking=False)
            #     self.mod5Index += 1